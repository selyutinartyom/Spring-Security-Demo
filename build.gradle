buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

sourceSets.main.java.srcDirs = ['src/main/java']
mainClassName = 'org.demo.Application'

jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
    manifest.attributes('Main-Class': mainClassName);
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    /**
     * Back-end
     */
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-web")
    /**
     * Front-end
     */
    compile("org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE")
    compile("org.webjars:angularjs:1.4.6")
    compile("org.webjars:bootstrap:3.3.5")
    compile("org.webjars:jquery:2.1.4")
    compile("org.webjars.bower:jquery.easing:1.3.0")
    compile("org.webjars:WOW:1.1.2")
    /**
     * Database
     */
    runtime("com.h2database:h2")
    /**
     * Test
     */
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}